ADDITIONAL NOTES:

- Heap Sort use MAX-heaps
- Priority Queues use MIN-heaps

This is the reason why there is a mode that must be set.


public Node<V> visit() {
	
	public boolean visited = false;
	Node<V> currentNode;
	heapQueue.add(root);
	
	while (!isLeaf(currentNode) { 
		
		
	}
	
}

//	public Node<V> locate(Node newNode) {
//		
//		int location = totalNodes;
//		int level = (int) Math.floor(Math.log(location) / Math.log(2));
//		int levelCap = (int) Math.pow(2, level);
//		int treeCap = (int) Math.pow(2, level + 1) - 1;
//		int foundNode = levelCap - (treeCap - location); // node's spot in level (offset)
//		
//		while (level > 0) {
//			if (foundNode % 2 == 1) { // it is left child
//				lastNode.left = newNode;
//			} else { 				  // it is right child
//				lastNode.right = newNode;
//			}
//			
//			
//			// +====================== WHAT DO I DO HERE
//			double percent = foundNode / levelCap;
//			levelCap = levelCap / 2;
//			foundNode = (int) Math.ceil(percent * levelCap);
//			level--;
//		}
//		
//		return newNode;
//	}

